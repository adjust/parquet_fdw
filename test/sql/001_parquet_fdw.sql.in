SET datestyle = 'ISO';
SET client_min_messages = WARNING;
SET log_statement TO 'none';
CREATE EXTENSION parquet_fdw;
DROP ROLE IF EXISTS regress_parquet_fdw;
CREATE ROLE regress_parquet_fdw LOGIN SUPERUSER;

SET ROLE regress_parquet_fdw;
CREATE SERVER parquet_srv FOREIGN DATA WRAPPER parquet_fdw;
CREATE USER MAPPING FOR regress_parquet_fdw SERVER parquet_srv;

SET ROLE regress_parquet_fdw;

CREATE FOREIGN TABLE example1 (
    one     INT8,
    two     INT8[],
    three   TEXT,
    four    TIMESTAMP,
    five    DATE,
    six     BOOL,
    seven   FLOAT8)
SERVER parquet_srv
OPTIONS (filename 'PG_ABS_SRCDIR/test/data/simple/example1.parquet', sorted 'one');

SELECT * FROM example1;

-- no explicit columns mentions
SELECT 1 as x FROM example1;
SELECT count(*) as count FROM example1;

-- sorting
EXPLAIN (COSTS OFF) SELECT * FROM example1 ORDER BY one;
EXPLAIN (COSTS OFF) SELECT * FROM example1 ORDER BY three;

-- filtering
SET client_min_messages = DEBUG1;
SELECT * FROM example1 WHERE one < 1;
SELECT * FROM example1 WHERE one <= 1;
SELECT * FROM example1 WHERE one > 6;
SELECT * FROM example1 WHERE one >= 6;
SELECT * FROM example1 WHERE one = 2;
SELECT * FROM example1 WHERE one = 7;
SELECT * FROM example1 WHERE six = true;
SELECT * FROM example1 WHERE six = false;
SELECT * FROM example1 WHERE seven < 1.5;
SELECT * FROM example1 WHERE seven <= 1.5;
SELECT * FROM example1 WHERE seven = 1.5;
SELECT * FROM example1 WHERE seven > 1;
SELECT * FROM example1 WHERE seven >= 1;
SELECT * FROM example1 WHERE seven IS NULL;

-- prepared statements
prepare prep(date) as select * from example1 where five < $1;
execute prep('2018-01-03');
execute prep('2018-01-01');

-- invalid options
SET client_min_messages = WARNING;
CREATE FOREIGN TABLE example_fail (one INT8, two INT8[], three TEXT)
SERVER parquet_srv;
CREATE FOREIGN TABLE example_fail (one INT8, two INT8[], three TEXT)
SERVER parquet_srv
OPTIONS (filename 'nonexistent.parquet', some_option '123');

CREATE FOREIGN TABLE example_fail (one INT8, two INT8[], three TEXT)
SERVER parquet_srv
OPTIONS (filename 'PG_ABS_SRCDIR/test/data/simple/example1.parquet', some_option '123');

-- type mismatch
CREATE FOREIGN TABLE example_fail (one INT8[], two INT8, three TEXT)
SERVER parquet_srv
OPTIONS (filename 'PG_ABS_SRCDIR/test/data/simple/example1.parquet', sorted 'one');
SELECT one FROM example_fail;
SELECT two FROM example_fail;

-- files_func
CREATE FUNCTION list_parquet_files(args JSONB)
RETURNS TEXT[] AS
$$
    SELECT ARRAY[args->>'dir' || '/example1.parquet', args->>'dir' || '/example2.parquet']::TEXT[];
$$
LANGUAGE SQL;

CREATE FOREIGN TABLE example_func (one INT8, two INT8[], three TEXT)
SERVER parquet_srv
OPTIONS (
    files_func 'list_parquet_files',
    files_func_arg '{"dir": "PG_ABS_SRCDIR/test/data/simple/"}',
    sorted 'one');
SELECT * FROM example_func;

-- invalid files_func options
CREATE FUNCTION int_array_func(args JSONB)
RETURNS INT[] AS
$$ SELECT ARRAY[1,2,3]::INT[]; $$
LANGUAGE SQL;

CREATE FUNCTION no_args_func()
RETURNS TEXT[] AS
    $$ SELECT ARRAY['PG_ABS_SRCDIR/test/data/simple/example1.parquet']::TEXT[]; $$
LANGUAGE SQL;

CREATE FOREIGN TABLE example_inv_func (one INT8, two INT8[], three TEXT)
SERVER parquet_srv
OPTIONS (files_func 'int_array_func');
CREATE FOREIGN TABLE example_inv_func (one INT8, two INT8[], three TEXT)
SERVER parquet_srv
OPTIONS (files_func 'no_args_func');
CREATE FOREIGN TABLE example_inv_func (one INT8, two INT8[], three TEXT)
SERVER parquet_srv
OPTIONS (files_func 'list_parquet_files', files_func_arg 'invalid json');
DROP FUNCTION list_parquet_files(JSONB);
DROP FUNCTION int_array_func(JSONB);
DROP FUNCTION no_args_func();

-- sequential multifile reader
CREATE FOREIGN TABLE example_seq (
    one     INT8,
    two     INT8[],
    three   TEXT,
    four    TIMESTAMP,
    five    DATE,
    six     BOOL,
    seven   FLOAT8)
SERVER parquet_srv
OPTIONS (filename 'PG_ABS_SRCDIR/test/data/simple/example1.parquet PG_ABS_SRCDIR/test/data/simple/example2.parquet');

EXPLAIN (COSTS OFF) SELECT * FROM example_seq;
SELECT * FROM example_seq;

-- multifile merge reader
CREATE FOREIGN TABLE example_sorted (
    one     INT8,
    two     INT8[],
    three   TEXT,
    four    TIMESTAMP,
    five    DATE,
    six     BOOL,
    seven   FLOAT8)
SERVER parquet_srv
OPTIONS (filename 'PG_ABS_SRCDIR/test/data/simple/example1.parquet PG_ABS_SRCDIR/test/data/simple/example2.parquet', sorted 'one');

EXPLAIN (COSTS OFF) SELECT * FROM example_sorted ORDER BY one;
SELECT * FROM example_sorted ORDER BY one;

-- caching multifile merge reader
CREATE FOREIGN TABLE example_sorted_caching (
    one     INT8,
    two     INT8[],
    three   TEXT,
    four    TIMESTAMP,
    five    DATE,
    six     BOOL,
    seven   FLOAT8)
SERVER parquet_srv
OPTIONS (filename 'PG_ABS_SRCDIR/test/data/simple/example1.parquet PG_ABS_SRCDIR/test/data/simple/example2.parquet', sorted 'one', max_open_files '1');

EXPLAIN (COSTS OFF) SELECT * FROM example_sorted_caching ORDER BY one;
SELECT * FROM example_sorted ORDER BY one;

-- parallel execution
SET parallel_setup_cost = 0;
SET parallel_tuple_cost = 0.001;
EXPLAIN (COSTS OFF) SELECT * FROM example_seq;
EXPLAIN (COSTS OFF) SELECT * FROM example_seq ORDER BY one;
EXPLAIN (COSTS OFF) SELECT * FROM example_seq ORDER BY two;
EXPLAIN (COSTS OFF) SELECT * FROM example_sorted;
EXPLAIN (COSTS OFF) SELECT * FROM example_sorted ORDER BY one;
EXPLAIN (COSTS OFF) SELECT * FROM example_sorted ORDER BY two;
ALTER FOREIGN TABLE example_sorted OPTIONS (ADD files_in_order 'true');
EXPLAIN (COSTS OFF) SELECT * FROM example_sorted ORDER BY one;
EXPLAIN (COSTS OFF) SELECT * FROM example1;
SELECT SUM(one) FROM example1;

-- multiple sorting keys
CREATE FOREIGN TABLE example_multisort (
    one     INT8,
    two     INT8[],
    three   TEXT,
    four    TIMESTAMP,
    five    DATE,
    six     BOOL)
SERVER parquet_srv
OPTIONS (filename 'PG_ABS_SRCDIR/test/data/simple/example1.parquet', sorted 'one five');

EXPLAIN (COSTS OFF) SELECT * FROM example_multisort ORDER BY one, five;
SELECT * FROM example_multisort ORDER BY one, five;

-- maps
SET client_min_messages = DEBUG1;
CREATE FOREIGN TABLE example3 (
    one     JSONB,
    two     JSONB,
    three   INT2)
SERVER parquet_srv
OPTIONS (filename 'PG_ABS_SRCDIR/test/data/complex/example3.parquet', sorted 'one');

SELECT * FROM example3;
SELECT * FROM example3 WHERE three = 3;

-- analyze
ANALYZE example_sorted;

SET client_min_messages = WARNING;

DROP OWNED by regress_parquet_fdw;
DROP EXTENSION parquet_fdw CASCADE;
